@model IdeaListViewModel
@{
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-12"><h1>Hi @Model.Name</h1></div>
</div>
<div class="row">
    <div class="col-12">
        @{ await Html.RenderPartialAsync("_CreateIdeaForm", Model.IdeaViewModel); }
    </div>
</div>
@if (Model.Ideas.Count() > 0)
{
    foreach (var idea in Model.Ideas)
    {
        <div class="row mt-5">
            <div class="col-12 col-md-2 text-right">
                <a asp-action="Detail" asp-controller="Users" asp-route-id="@idea.User.Id">@idea.User.Name</a> says:
                @if (idea.UserId == Model.UserId)
                {
                    <p><a asp-action="Delete" asp-controller="Idea" asp-route-id="@idea.Id">[Delete]</a></p>
                }
            </div>
            <div class="12 col-md-10">
                <p class="border pt-2 pb-2 pr-2 pl-2">
                    @idea.Content
                </p>
                <span class="mr-3">
                    @if (idea.Likes.Any(l => l.UserId == Model.UserId))
                    {
                        <span>Liked</span>
                    }
                    else
                    {
                        <a href="#" onclick="return likeIdea(event, @idea.Id)">Like</a>
                    }
                </span>
                <a href="#"><span data-ideaid="@idea.Id">@idea.Likes.Count()</span> people</a> like this.
            </div>
        </div>
    }
}
else
{
    <h1 class="display-1">No ideas?</h1>
}

@section Scripts {
    <script>
        function likeIdea(event, id) {
            var target = event.target;
            $.get("/Idea/Like/" + id, function (data) {
                target.outerHTML = "Liked";
                $("[data-ideaid=" + id + "]").text(data);
            });

            return false;
        }
    </script>
}